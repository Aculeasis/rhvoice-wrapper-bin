matrix:
  include:
  - language: python
    sudo: true
    python: '3.5'
  - language: python
    sudo: true
    python: '3.6'
  - language: python
    sudo: true
    python: '3.7'
  - language: generic
    sudo: required
    services:
      - docker
    env: AARCH=armhf
  - language: generic
    sudo: required
    services:
    - docker
    env: AARCH=arm64
  - language: generic
    sudo: required
    services:
    - docker
    env: AARCH=i386

before_install:
  - |
    if [ -n "$AARCH" ]; then
      docker run --privileged multiarch/qemu-user-static:register --reset
    else
      sudo apt-get update -y -qq
      sudo apt-get -y install -y -qq --no-install-recommends lame opus-tools flac
    fi

install:
  - |
    if [ -n "$AARCH" ]; then
      docker run -v $(pwd):/workd -w /workd -it multiarch/debian-debootstrap:"$AARCH"-stretch bash /workd/entrypoint.sh
    else
      pip install setuptools wheel
      if [ -n "$TRAVIS_TAG" ] && [ "$TRAVIS_PYTHON_VERSION" == "3.6" ]; then
        pip install -U pip
        pip install -U setuptools wheel
      fi
      pip install scons lxml rhvoice-wrapper-data
    fi

before_script:
  - |
    if [ -z "$AARCH" ]; then
      sudo locale-gen ru_RU.UTF-8
      python setup.py sdist bdist_wheel --dist-dir=github
      cp dist/*.gz github/
      ls -lh github/
      git clone --depth=1 https://github.com/Aculeasis/rhvoice-proxy
    fi

script:
  - |
    if [ -n "$AARCH" ]; then
      ls -lh github
    else
      pip install --no-cache-dir github/*.whl
      cd rhvoice-proxy/
      python -m unittest discover -v -s rhvoice_wrapper/tests/
      cd ..
    fi

cache: pip

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

deploy:
  - provider: pypi
    username: "__token__"
    password:
      secure: "rComVrWyiXKVNDk/No+DcjawbRkglDezdYXVmJdcHRVRiWiuZRY0lI+aqyGIJAxXnQco5VN8VsIOMlQyG4ouEmqIDWW1RgvQVkCNgLSxdoJuR0rllCgyEcgFYdDDUhkorJw2uVe+mqT5hUeqHvIxE5txmNGdIUdA619IHxgQy8CPvvkfTWuQ/hAaBOx1HzeU8qOSMFiDKwvcWv7Wh7M3ZeAwiotFB7NLsiam2J+dBew5pTHyYG+AM5vAX6Fd5VE9B3Zv7sF86VNQCinWYkWQ9t1NN3GAhWa9kgbljmgz4tPFgE91itAcXcIGBIcJOrJbkxsL8Z4K34oNoJ73rRXXSA3AiQ7pfLEKGTKJITHWrcCQdAJIpNI2RumfIu/1xcAiOwW49R5ngKR46OHxnDjvwI6SDEEFCOuNpkPov9RhBCIJoMJo5Mp4c2EhEKQZl1OWdXVtapu9QFxXGw+51/98l+ITen468lNGpHX0PPg74/Ohri5oC+YZGt1uZ3BOnDvXz55MxruNSVGVqnHke55iKMxQgYf4kZ2pI6enYR0gZQSZX+YrvLbrVnZ8dk6SU0VRKclWLKYaSRa0NMv6kaM2cTicCTvCD4Fc34L87vQOy59gqIc9M1yofE4TgD5LOFr2xkhpmd+c0sOdWdPhQFlauKsTe4IEIUd8tNzWeAhVCPI="
    distributions: sdist
    skip_cleanup: true
    skip_existing: true
    on:
      condition: "$TRAVIS_PYTHON_VERSION == 3.6"
      tags: true
      branch: master

  - provider: releases
    token:
      secure: okMG2kmpHA/xTU8vEUb4kIXEvS8MyIcF8uC7mfi6b0328x1L2G2kWaJXlAUe35cpUO6mOfVIEVugPSQNaZFYY7bnsdKhiduy2xbuncv6VjgnZA4qqM57X28IqIrI/ZRTTRAYXo8LdPhwXKINykPQSthBMsgiN9qNfJNK4AfrvnK4LzRQnlYIN7kvVTsRQuFS86eKS/qM5wlJi8O4KXn6ZPYLiFhNWI3zXcaf4bUH5a2bH9dq41HyzU751GF4VgHHEQ9wcJoJji0a0dqWPMmt+/w2Nj6SKO34BMkdtazIW89b/wHQLTXEujvK0giO3uXGFoRCy3vkOrgxK5Qv11B22/ZaaWbaAyyiiH8jKpp9ywaUCkQNN4BWFOby+cfsUyGp+kDPkQSD8pHFeLMDLP4BSIOjZW+E1mvbZuxfPFiNONWRDZFdt8F4BcuBZyWVu5rSFMvOHJtqj5dhYaMebi9jAccm+t5P00aI1daw8weNORe3beS21UimsztB4bpRw09yTAXOvzZsUG1dkb0Q6WwYZoxT2Ji30//G2P6Zit7LlEFyYEuM1dwEhm4CdNbb41Y2RsYKKBeTpMdcHCxGid2TthnoRmilsnbKUX7MYycvxI8iPzWUSL9VaCYtgctpiG024wuRXQUgm53rUc5WjPva4e1+XkFE8CLY4hv02Bz64fc=
    file_glob: true
    file: github/*
    skip_cleanup: true
    on:
      condition: "$TRAVIS_PYTHON_VERSION == 3.6  || -n $AARCH"
      tags: true
      branch: master
